buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath "com.matthewprenger:CurseGradle:1.0-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.matthewprenger.cursegradle"

def secretFile = file "secret.properties"
project.ext.secret = null
if (secretFile.exists()) {
    secretFile.withReader {
        def prop = new Properties()
        prop.load(it)
        project.ext.secret = new ConfigSlurper().parse prop
    }
}

version = getVersion("VERSION") + "-1.8.9"
def llibrary_version = getVersion("LLIBRARY_VERSION")
group = "net.ilexiconn"
archivesBaseName = "showcase"
sourceCompatibility = targetCompatibility = 1.6

minecraft {
    version = "1.8.9-11.15.1.1758"
    runDir = "minecraft"
    mappings = "stable_20"
}

repositories {
    mavenCentral()
    maven {
        name = "ilexiconn"
        url = "http://maven.ilexiconn.net/"
    }
}

dependencies {
    compile "net.ilexiconn:llibrary:$llibrary_version-1.8.9:dev"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "llibrary_version", llibrary_version

    from (sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version, "mcversion": project.minecraft.version, "llibrary_version": llibrary_version
    }
        
    from (sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

task apiJar(type: Jar) {
    from (sourceSets.main.allSource) {
        include "net/ilexiconn/showcase/api/**"
    }
    classifier = "api"
}

artifacts {
    archives sourceJar, apiJar
}

import groovy.json.JsonSlurper
curseforge {
    def url = "http://pastebin.com/raw/q0VdpSxU".toURL()
    def versions = new JsonSlurper().parseText url.text

    if (secret) {
        apiKey = secret.curseForgeApiKey
    } else {
        apiKey = ""
    }

    project {
        id = "237789"

        releaseType = "release"
        changelog = versions.versions[versions.getAt(releaseType)].join("\n")

        addGameVersion "1.8.9"

        mainArtifact(jar) {
            displayName = "Showcase " + getVersion("VERSION") + " for Minecraft 1.8.9"
        }

        addArtifact(sourceJar) {
            displayName = "Sources"
        }

        addArtifact(apiJar) {
            displayName = "API"
        }
    }
}

String getVersion(String type) {
    String major = "0";
    String revision = "0";
    String patch = "0";
    String prefix = "public static final String $type = \"";
    File file = file("src/main/java/net/ilexiconn/showcase/Showcase.java")
    file.eachLine { String s ->
        s = s.trim();
        if (s.startsWith(prefix)) {
            s = s.substring(prefix.length(), s.length() - 2);
            String[] pts = s.split("\\.");

            major = pts[0];
            revision = pts[1];
            patch = pts[2];
        }
    }

    return "$major.$revision.$patch";
}